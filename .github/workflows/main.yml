name: Kintone plugin tests

on:
  workflow_dispatch:
    inputs:
      kintonePlugin:
        type: choice
        description: 'plugin'
        required: true
        default: multiTab
        options:
          - multiTab
          - conditionalDisplay
      testFilter:
        type: string
        description: 'Filter test by test description'
        required: false
#  push:
#    branches:
#      - ABC
#  schedule:
#  - cron:  '0 * * * *'

env:
  TESTING_SITE_DOMAIN: ${{ secrets.TESTING_SITE_DOMAIN }}
  TESTING_SITE_USERNAME: ${{ secrets.TESTING_SITE_USERNAME }}
  TESTING_SITE_PASSWORD: ${{ secrets.TESTING_SITE_PASSWORD }}
  SPEC_RETRIES: 2

jobs:
  validate-inputs:
    name: Validate parameters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
#      - name: Dump GitHub context
#        env:
#          GITHUB_CONTEXT: ${{ toJSON(github) }}
#        run: echo "$GITHUB_CONTEXT"
#        shell: bash
      - name: Get start time
        run: |
          currentTime=$(date +'%c')
          echo "START_TIME=$currentTime" >> $GITHUB_ENV
      - name: Set job env
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            while read line; do
              echo "$line" >> $GITHUB_ENV
            done < ${{ github.workspace }}/.github/workflows/.env
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "KINTONE_PLUGIN=${{ github.event.inputs.kintonePlugin }}" >> $GITHUB_ENV
            echo "TEST_FILTER=${{ github.event.inputs.testFilter }}" >> $GITHUB_ENV
          fi
          echo "SPEC_RETRIES=${{ env.SPEC_RETRIES }}" >> $GITHUB_ENV
      - name: Print all parameters
        run: |
          echo "::notice title=Using workflow from branch::${GITHUB_REF##*/}"
          message="Testing plugin: ${{ env.KINTONE_PLUGIN }} - Test suites: ${{ env.TEST_SUITES }}"
          echo "::notice title=Test info::$message"
    outputs:
      kintonePlugin: ${{ env.KINTONE_PLUGIN }}
      testFilter: ${{ env.TEST_FILTER }}
      specRetries: ${{ env.SPEC_RETRIES }}
      startTime: ${{ env.START_TIME }}

  test:
    runs-on: ubuntu-latest
    needs: [ validate-inputs ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test-execution
        with:
          specRetries: ${{ needs.validate-inputs.outputs.specRetries }}
          kintonePlugin: ${{ needs.validate-inputs.outputs.kintonePlugin }}
          domain: ${{ secrets.TESTING_SITE_DOMAIN }}
          loginName: ${{ secrets.TESTING_SITE_USERNAME }}
          password: ${{ secrets.TESTING_SITE_PASSWORD }}

  allure-report:
    runs-on: ubuntu-latest
    needs: [ validate-inputs, test ]
    if: |
      !cancelled() &&
      needs.validate-inputs.result != 'failure'
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/allure-report
        with:
          kintonePlugin: ${{ needs.validate-inputs.outputs.kintonePlugin }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  kintone-report:
    runs-on: ubuntu-latest
    needs: [ validate-inputs, test ]
    if: |
      !cancelled() &&
      needs.validate-inputs.result != 'failure'
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/kintone-report
        with:
          kintonePlugin: ${{ needs.validate-inputs.outputs.kintonePlugin }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testManagementKintoneUrl: ${{ secrets.TEST_MANAGEMENT_KINTONE_URL }}
          testManagementAppId: ${{ secrets.TEST_MANAGEMENT_APP_ID }}
          testManagementAppApiToken: ${{ secrets.TEST_MANAGEMENT_APP_API_TOKEN }}
          testResult: ${{ needs.test.result }}
          startTime: ${{ needs.validate-inputs.outputs.startTime }}
